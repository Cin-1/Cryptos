{"version":3,"sources":["cryptomonedas.png","hooks/useMoneda.js","hooks/useCriptomoneda.js","Components/Error.jsx","Components/Formulario.jsx","Components/Cotizacion.jsx","Components/Spinner.jsx","App.js","index.js"],"names":["Label","styled","label","Select","select","useMoneda","stateInicial","opcionMoneda","useState","state","setState","onChange","e","target","value","map","opcion","codigo","nombre","useCripto","console","log","CoinInfo","Name","FullName","Id","p","Error","Boton","input","Formulario","guardarCriptomoneda","guardarMoneda","listacripto","guardarCripto","error","guardarError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","a","Axios","get","resultado","data","Data","consulltarAPI","onSubmit","preventDefault","mensaje","type","Cotizacion","ResultadoDiv","div","Info","Precio","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","class","Contenedor","Imagen","img","Heading","h1","App","cripto","guardarResultado","cargando","guardarCargando","cotizarMoneda","url","axios","setTimeout","DISPLAY","componenteCond","src","image","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bd79c19.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React, { Fragment, useState } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Label = styled.label`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 2.4rem;\n  margin-top: 2rem;\n  display: block;\n`;\nconst Select = styled.select`\n  width: 100%;\n  display: block;\n  padding: 1rem;\n  -webkit-appearance: none;\n  border-radius: 10px;\n  border: none;\n  font-size: 1.2rem;\n`;\n\nconst useMoneda = (label, stateInicial, opcionMoneda) => {\n  const [state, setState] = useState(stateInicial);\n  const Seleccionar = () => (\n    <Fragment>\n      <Label>{label}</Label>\n      <Select onChange={(e) => setState(e.target.value)} value={state}>\n        <option value=\"\"> -Seleccione-</option>\n        {opcionMoneda.map((opcion) => (\n          <option value={opcion.codigo} key={opcion.codigo}>\n            {opcion.nombre}\n          </option>\n        ))}\n      </Select>\n    </Fragment>\n  );\n  return [state, Seleccionar, setState];\n};\n\nexport default useMoneda;\n","import React, { Fragment, useState } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Label = styled.label`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 2.4rem;\n  margin-top: 2rem;\n  display: block;\n`;\nconst Select = styled.select`\n  width: 100%;\n  display: block;\n  padding: 1rem;\n  -webkit-appearance: none;\n  border-radius: 10px;\n  border: none;\n  font-size: 1.2rem;\n`;\n\nconst useCripto = (label, stateInicial, opcionMoneda) => {\n  console.log(opcionMoneda);\n  const [state, setState] = useState(stateInicial);\n  const SelectCripto = () => (\n    <Fragment>\n      <Label>{label}</Label>\n      <Select onChange={(e) => setState(e.target.value)} value={state}>\n        <option value=\"\"> -Seleccione-</option>\n\n        {opcionMoneda.map((opcion) => (\n          <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>\n            {opcion.CoinInfo.FullName}\n          </option>\n        ))}\n      </Select>\n    </Fragment>\n  );\n  return [state, SelectCripto, setState];\n};\n\nexport default useCripto;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst MensajeError = styled.p`\n  background-color: #b7322c;\n  padding: 1rem;\n  font-size: 30px;\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  font-family: \"Bebas Neue\", cursive;\n`;\n\nconst Error1 = ({ mensaje }) => {\n  return <MensajeError>{mensaje}</MensajeError>;\n};\n\nexport default Error;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport useMoneda from \"../hooks/useMoneda\";\nimport useCripto from \"../hooks/useCriptomoneda\";\nimport Axios from \"axios\";\nimport Error1 from \"./Error\";\n\nconst Boton = styled.input`\n  margin-top: 20px;\n  font-weight: bold;\n  font-size: 20px;\n  padding: 10px;\n  background-color: #66a2fe;\n  border: none;\n  width: 100%;\n  border-radius: 10px;\n  color: #fff;\n  transition: background-color 0.3s ease;\n  &:hover {\n    background-color: #326ac0;\n    cursor: pointer;\n  }\n`;\n\nconst Formulario = ({ guardarCriptomoneda, guardarMoneda }) => {\n  const [listacripto, guardarCripto] = useState([]);\n  const [error, guardarError] = useState(false);\n  const MONEDAS = [\n    {\n      codigo: \"USD\",\n      nombre: \"Dolar de Estados Unidos\",\n    },\n    {\n      codigo: \"ARS\",\n      nombre: \"Peso  Argentino\",\n    },\n    {\n      codigo: \"EUR\",\n      nombre: \"Euro\",\n    },\n    {\n      codigo: \"GBP\",\n      nombre: \"Libra Esterlina\",\n    },\n  ];\n  //use moneda\n  const [moneda, SelectMonedas] = useMoneda(\"Elige tu Moneda\", \"\", MONEDAS);\n\n  //use cripto\n\n  const [criptomoneda, SelectCripto] = useCripto(\n    \"Elige tu Criptomoneda\",\n    \"\",\n    listacripto\n  );\n\n  useEffect(() => {\n    const consulltarAPI = async () => {\n      const url =\n        \"https://min-api.cryptocompare.com/data/top/totalvolfull?limit=10&tsym=USD\";\n\n      const resultado = await Axios.get(url);\n\n      guardarCripto(resultado.data.Data);\n    };\n    consulltarAPI();\n  }, []);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (moneda === \"\" || criptomoneda === \"\") {\n      guardarError(true);\n      return;\n    }\n    guardarError(false);\n    guardarCriptomoneda(criptomoneda);\n    guardarMoneda(moneda);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {error ? <Error1 mensaje={\"Seleccionar todas las opciones\"} /> : null}\n      <SelectCripto />\n      <SelectMonedas />\n      <Boton type=\"submit\" value=\"Calcular\" />\n    </form>\n  );\n};\n\nexport default Formulario;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Cotizacion = ({ resultado }) => {\n  const ResultadoDiv = styled.div`\n    color: #fff;\n    font-family: Arial, Helvetica, sans-serif;\n  `;\n\n  const Info = styled.p`\n    font-size: 18px;\n    span {\n      font-weight: bold;\n    }\n  `;\n  const Precio = styled.p`\n    font-size: 30px;\n    span {\n      font-weight: bold;\n    }\n  `;\n  if (Object.keys(resultado).length === 0) return null;\n  return (\n    <ResultadoDiv>\n      <Precio>\n        El precio es: <span>{resultado.PRICE}</span>\n      </Precio>\n      <Info>\n        Precio más alto del día: <span>{resultado.HIGHDAY}</span>\n      </Info>\n      <Info>\n        Precio más bajo del día: <span>{resultado.LOWDAY}</span>\n      </Info>\n      <Info>\n        Variación ultimas 24 hs: <span>{resultado.CHANGEPCT24HOUR}</span>\n      </Info>\n      <Info>\n        Última actualización: <span>{resultado.LASTUPDATE}</span>\n      </Info>\n    </ResultadoDiv>\n  );\n};\n\nexport default Cotizacion;\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n  return (\n    <div class=\"sk-chase\">\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport axios from \"axios\";\nimport image from \"./cryptomonedas.png\";\nimport Formulario from \"./Components/Formulario\";\nimport Cotizacion from \"./Components/Cotizacion\";\nimport Spinner from \"./Components/Spinner\";\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`;\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\nconst Heading = styled.h1`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n  &::after {\n    content: \"\";\n    width: 100px;\n    height: 6px;\n    background-color: #66a2fe;\n    display: block;\n  }\n`;\n\nfunction App() {\n  const [moneda, guardarMoneda] = useState(\"\");\n  const [cripto, guardarCriptomoneda] = useState(\"\");\n  const [resultado, guardarResultado] = useState({});\n  const [cargando, guardarCargando] = useState(false);\n\n  useEffect(() => {\n    const cotizarMoneda = async () => {\n      if (moneda === \"\") return;\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${cripto}&tsyms=${moneda}`;\n      const resultado = await axios.get(url);\n      guardarCargando(true);\n      setTimeout(() => {\n        guardarCargando(false);\n        guardarResultado(resultado.data.DISPLAY[cripto][moneda]);\n      }, 2000);\n    };\n    guardarCargando(false);\n    cotizarMoneda();\n  }, [moneda, cripto]);\n  const componenteCond = cargando ? (\n    <Spinner />\n  ) : (\n    <Cotizacion resultado={resultado} />\n  );\n\n  return (\n    <Contenedor>\n      <div>\n        <Imagen src={image} alt=\"Imagen crypto\" />\n      </div>\n      <div>\n        <Heading>Cotiza criptomonedas al instante</Heading>\n        <Formulario\n          guardarMoneda={guardarMoneda}\n          guardarCriptomoneda={guardarCriptomoneda}\n        />\n        {componenteCond}{\" \"}\n      </div>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}